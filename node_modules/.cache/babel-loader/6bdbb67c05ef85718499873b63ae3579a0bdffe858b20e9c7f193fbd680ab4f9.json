{"ast":null,"code":"var _jsxFileName = \"/Users/paolo/repos/beije_academy/web/react/flutter-forest-game/src/screens/Game.js\";\nimport React, { Component } from \"react\";\nimport MonsterSprite from \"../components/classComponents/monsterSprite/MonsterSprite\";\nimport PlayerSprite from \"../components/classComponents/playerSprite/PlayerSprite\";\nimport monster1 from \"../assets/images/game/sprites/monsters/enemy1-spritesheet.png\";\nimport monster2 from \"../assets/images/game/sprites/monsters/enemy2-spritesheet.png\";\nimport monster3 from \"../assets/images/game/sprites/monsters/enemy3-spritesheet.png\";\nimport monster4 from \"../assets/images/game/sprites/monsters/enemy4-spritesheet.png\";\nimport withRouter from \"../routing/wrapRoutingClass/withNavigation\";\nimport resume from \"../assets/images/icons/play.svg\";\nimport pause from \"../assets/images/icons/pause.svg\";\nimport restart from \"../assets/images/icons/return.svg\";\nimport leaderboard from \"../assets/images/icons/leaderboard.svg\";\nimport { playSwoosh, playHit, playWing, playHitDie } from \"../utils/playSounds\";\nimport { getRandom } from \"../utils/random\";\nimport { setStorage, getStorage } from \"../utils/localStorageUtls\";\nimport \"../styles/game/game.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass Game extends Component {\n  constructor(props) {\n    super(props);\n    this.updateLocalStorage = () => {\n      this.localStorageData.sort((_ref, _ref2) => {\n        let {\n          score: a\n        } = _ref;\n        let {\n          score: b\n        } = _ref2;\n        return b - a;\n      });\n      setStorage(\"users\", this.localStorageData);\n      // localStorage.setItem(key, JSON.stringify(value));\n      // localStorage.setItem(\"users\", JSON.stringify(this.localStorageData));\n    };\n    this.handleLocalStorage = score => {\n      let userFound = this.localStorageData.find(user => {\n        return user.name.toLowerCase() === this.userName.toLowerCase();\n      });\n      if (!userFound) {\n        this.localStorageData.push({\n          name: this.userName,\n          score: score\n        });\n        this.updateLocalStorage();\n      }\n      if (userFound && userFound.score < score) {\n        userFound.score = score;\n        this.updateLocalStorage();\n      }\n    };\n    this.handleFrame = currentFrameTime => {\n      let deltaTimeFrames = currentFrameTime - this.prevFrameTime - this.gameOverIntervall;\n      console.log(currentFrameTime);\n      this.pauseFrameIntervall = 0;\n      this.gameOverIntervall = 0;\n      console.log(\"deltaTimeFrames: \" + deltaTimeFrames);\n      this.prevFrameTime = currentFrameTime;\n      if (deltaTimeFrames > 200) {\n        return this.requestFrameId = requestAnimationFrame(this.handleFrame);\n      }\n      let isGameRunning = this.state.isGameRunning;\n      let score = Math.ceil((Date.now() - this.startTime - this.pauseTimeIntervall) / 500);\n      let [offset, borderCollisionDetected] = this.applyGravity(deltaTimeFrames);\n      let [monstersArr, monstersCollisionDetected] = this.moveMonsters(deltaTimeFrames);\n      if (monstersCollisionDetected || borderCollisionDetected) {\n        isGameRunning = false;\n        this.gravity = this.startGravity;\n        window.cancelAnimationFrame(this.requestFrameId);\n        this.handleLocalStorage(score);\n        this.gameOverStart = Date.now();\n      }\n      this.setState({\n        player: offset,\n        monsters: monstersArr,\n        score: score,\n        isGameRunning: isGameRunning\n      });\n      if (!monstersCollisionDetected && !borderCollisionDetected) {\n        this.requestFrameId = window.requestAnimationFrame(this.handleFrame);\n      }\n    };\n    this.movePlayer = e => {\n      if (e.target.classList.contains(\"pause-popup\")) return;\n      if (e.target.classList.contains(\"pause-popup_svg\")) return;\n      if (e.target.classList.contains(\"pause\")) return;\n      if (e.target.classList.contains(\"pause_svg\")) return;\n      if (!this.state.isGameRunning) return;\n      if (this.state.isPaused) return;\n      playWing();\n      this.gravity = this.startGravity;\n      const currentY = this.playerRef.current.getBoundingClientRect().y;\n      this.setState({\n        player: {\n          y: currentY - 80,\n          scale: this.state.player.scale\n        }\n      });\n    };\n    this.applyGravity = deltaTime => {\n      let borderCollisionDetected = this.checkBorderCollision();\n      const playerY = this.playerRef.current.getBoundingClientRect().y;\n      this.gravity = this.gravity + 0.2;\n      return [{\n        y: playerY + this.gravity * (deltaTime / 20),\n        scale: this.state.player.scale\n      }, borderCollisionDetected];\n    };\n    this.startGame = () => {\n      this.setState({\n        isGameRunning: true\n      });\n      this.requestFrameId = window.requestAnimationFrame(this.handleFrame);\n      this.startTime = Date.now();\n    };\n    this.moveMonsters = deltaTime => {\n      let collisionDetected = false;\n      for (let i = 0; i < this.state.monsters.length; i++) {\n        if (this.checkMonstersCollision(this[`monster${i + 1}Ref`].current.getBoundingClientRect())) {\n          collisionDetected = true;\n          break;\n        }\n      }\n      const monstersArr = this.state.monsters.map((monster, index) => {\n        if (monster.x > window.innerWidth) {\n          monster.x = getRandom(-60, -window.innerWidth);\n          monster.y = getRandom(110, window.innerHeight - 110);\n          this.monstersSpeeds[index] = getRandom(...this.rangeSpeed);\n        }\n        monster.x += this.monstersSpeeds[index] * (deltaTime / 20);\n        console.log(monster);\n        return monster;\n      });\n      return [monstersArr, collisionDetected];\n\n      ////////////////\n    };\n    this.initMonstersPosition = () => {\n      let monstersPosition = this.state.monsters.map(monster => {\n        return {\n          x: getRandom(-60, -window.innerWidth),\n          y: getRandom(110, window.innerHeight - 110),\n          scale: monster.scale\n        };\n      });\n      return monstersPosition;\n    };\n    this.setPause = () => {\n      cancelAnimationFrame(this.requestFrameId);\n      this.pausedTimeStart = Date.now();\n      this.pauseFrameStart = Date.now();\n      this.setState({\n        isPaused: true\n      });\n    };\n    this.resumeGame = () => {\n      this.pausedTime = this.pausedTime + Date.now();\n      this.pausedTimeEnd = Date.now();\n      this.pauseTimeIntervall = this.pauseTimeIntervall + (this.pausedTimeEnd - this.pausedTimeStart);\n      this.pauseTimeEnd = Date.now();\n      this.pauseFrameIntervall = this.pauseTimeEnd - this.pauseFrameStart;\n      this.setState({\n        isPaused: false\n      });\n      this.requestFrameId = window.requestAnimationFrame(this.handleFrame);\n    };\n    this.restartGame = () => {\n      let monstersPosition = this.initMonstersPosition();\n      this.setState({\n        player: {\n          y: 346,\n          scale: this.state.player.scale\n        },\n        monsters: monstersPosition,\n        score: 0,\n        isPaused: false,\n        isGameRunning: true\n      });\n      playSwoosh();\n      this.startTime = Date.now();\n      this.gameOverEnd = Date.now();\n      this.gameOverIntervall = this.gameOverEnd - this.gameOverStart;\n      this.pauseTimeIntervall = 0;\n      this.requestFrameId = window.requestAnimationFrame(this.handleFrame);\n    };\n    this.goToLeaderboard = () => {\n      this.props.router.navigate(\"/leaderboard\");\n    };\n    this.startTime = null;\n    this.pausedTimeStart = 0;\n    this.pausedTimeEnd = 0;\n    this.pauseTimeIntervall = 0;\n    this.pauseFrameStart = 0;\n    this.pauseTimeEnd = 0;\n    this.pauseFrameIntervall = 0;\n    this.gameOverStart = 0;\n    this.gameOverEnd = 0;\n    this.gameOverIntervall = 0;\n    this.startGravity = 1;\n    this.gravity = 1;\n    this.rangeSpeed = window.innerWidth < 480 ? [2, 5] : [6, 10];\n    this.monstersSpeeds = [getRandom(...this.rangeSpeed), getRandom(...this.rangeSpeed), getRandom(...this.rangeSpeed), getRandom(...this.rangeSpeed)];\n    this.requestFrameId = null;\n    this.prevFrameTime = 0;\n    this.playerRef = /*#__PURE__*/React.createRef();\n    this.monster1Ref = /*#__PURE__*/React.createRef();\n    this.monster2Ref = /*#__PURE__*/React.createRef();\n    this.monster3Ref = /*#__PURE__*/React.createRef();\n    this.monster4Ref = /*#__PURE__*/React.createRef();\n    this.userName = props.router.location.state.name;\n    this.localStorageData = getStorage(\"users\") === null || getStorage(\"users\" === undefined) ? [] : getStorage(\"users\");\n    this.state = {\n      player: {\n        y: 346,\n        scale: window.innerWidth < 480 ? 11.76 : 7\n      },\n      monsters: [{\n        x: getRandom(-60, -window.innerWidth),\n        y: getRandom(110, window.innerHeight - 110),\n        scale: window.innerWidth < 480 ? 17.5 : 10.5\n      }, {\n        x: getRandom(-60, -window.innerWidth),\n        y: getRandom(110, window.innerHeight - 110),\n        scale: window.innerWidth < 480 ? 4.43 : 2.66\n      }, {\n        x: getRandom(-60, -window.innerWidth),\n        y: getRandom(110, window.innerHeight - 110),\n        scale: window.innerWidth < 480 ? 13.33 : 8\n      }, {\n        x: getRandom(-60, -window.innerWidth),\n        y: getRandom(110, window.innerHeight - 110),\n        scale: window.innerWidth < 480 ? 4.21 : 2.53\n      }],\n      score: 0,\n      isPaused: false,\n      isGameRunning: false\n    };\n    console.log(this.requestFrameId);\n  }\n  componentDidMount() {\n    document.addEventListener(\"click\", this.movePlayer);\n    this.startGame();\n  }\n  componentDidUpdate(prevProps, prevState) {}\n  checkMonstersCollision(monsterCoords) {\n    let monstersCollisionDetected = false;\n    let playerCoords = this.playerRef.current.getBoundingClientRect();\n    if (playerCoords.y < monsterCoords.y + monsterCoords.height && playerCoords.y + playerCoords.height > monsterCoords.y && playerCoords.x < monsterCoords.x + monsterCoords.width && playerCoords.x + playerCoords.width > monsterCoords.x) {\n      playHitDie();\n      monstersCollisionDetected = true;\n    }\n    return monstersCollisionDetected;\n  }\n  checkBorderCollision() {\n    let playerCoords = this.playerRef.current.getBoundingClientRect();\n    if (playerCoords.y < 0 || playerCoords.y + playerCoords.height > window.innerHeight) {\n      playHit();\n      return true;\n    }\n    return false;\n  }\n  componentWillUnmount() {\n    window.cancelAnimationFrame(this.requestFrameId);\n    document.removeEventListener(\"click\", this.movePlayer);\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-container\",\n      children: [!this.state.isGameRunning && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-over-wrapper\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"game-over\",\n          children: \"GAME OVER\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 361,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"game-over-choices\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"restart\",\n            src: restart,\n            onClick: this.restartGame\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 363,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"leaderboard\",\n            src: leaderboard,\n            onClick: this.goToLeaderboard\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 368,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 362,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 360,\n        columnNumber: 11\n      }, this), this.state.isGameRunning && !this.state.isPaused && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pause\",\n        onClick: this.setPause,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"pause_svg\",\n          src: pause\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 378,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 377,\n        columnNumber: 11\n      }, this), this.state.isPaused && /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: this.resumeGame,\n        className: \"pause-popup\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"pause-popup_svg\",\n          src: resume\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 383,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 382,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"score\",\n        children: this.state.score\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 386,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `layer sky sky_animation ${(!this.state.isGameRunning || this.state.isPaused) && \"paused\"}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 387,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `layer clouds-1 clouds-1_animation ${(!this.state.isGameRunning || this.state.isPaused) && \"paused\"}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 392,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `layer rocks rocks_animation ${(!this.state.isGameRunning || this.state.isPaused) && \"paused\"}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 397,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `layer clouds-2 clouds-2_animation ${(!this.state.isGameRunning || this.state.isPaused) && \"paused\"}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 402,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `layer ground-1 ground-1_animation ${(!this.state.isGameRunning || this.state.isPaused) && \"paused\"}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 407,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `layer ground-2 ground-2_animation ${(!this.state.isGameRunning || this.state.isPaused) && \"paused\"}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 412,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `layer ground-3 ground-3_animation ${(!this.state.isGameRunning || this.state.isPaused) && \"paused\"}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 417,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `layer plant plant_animation ${(!this.state.isGameRunning || this.state.isPaused) && \"paused\"}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 422,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(PlayerSprite, {\n        playerRef: this.playerRef,\n        coords: {\n          x: 50,\n          y: this.state.player.y,\n          scale: this.state.player.scale\n        },\n        animate: this.state.isGameRunning && !this.state.isPaused\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 427,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MonsterSprite, {\n        monsterRef: this.monster1Ref,\n        monsterName: \"monster-yellow\",\n        coords: {\n          x: this.state.monsters[0].x,\n          y: this.state.monsters[0].y,\n          width: 0,\n          height: 0\n        },\n        spriteSheet: {\n          path: monster1,\n          width: 1050,\n          height: 852,\n          scale: this.state.monsters[0].scale\n        },\n        animate: this.state.isGameRunning && !this.state.isPaused\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 436,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MonsterSprite, {\n        monsterRef: this.monster2Ref,\n        monsterName: \"monster-purple\",\n        coords: {\n          x: this.state.monsters[1].x,\n          y: this.state.monsters[1].y,\n          width: 0,\n          height: 0\n        },\n        spriteSheet: {\n          path: monster2,\n          width: 266,\n          height: 207,\n          scale: this.state.monsters[1].scale\n        },\n        animate: this.state.isGameRunning && !this.state.isPaused\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 453,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MonsterSprite, {\n        monsterRef: this.monster3Ref,\n        monsterName: \"monster-bat\",\n        coords: {\n          x: this.state.monsters[2].x,\n          y: this.state.monsters[2].y,\n          width: 0,\n          height: 0\n        },\n        spriteSheet: {\n          path: monster3,\n          width: 800,\n          height: 812,\n          scale: this.state.monsters[2].scale\n        },\n        animate: this.state.isGameRunning && !this.state.isPaused\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 470,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MonsterSprite, {\n        monsterRef: this.monster4Ref,\n        monsterName: \"monster-red\",\n        coords: {\n          x: this.state.monsters[3].x,\n          y: this.state.monsters[3].y,\n          width: 0,\n          height: 0\n        },\n        spriteSheet: {\n          path: monster4,\n          width: 253,\n          height: 207,\n          scale: this.state.monsters[3].scale\n        },\n        animate: this.state.isGameRunning && !this.state.isPaused\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 487,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 358,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default _c = withRouter(Game);\nvar _c;\n$RefreshReg$(_c, \"%default%\");","map":{"version":3,"names":["React","Component","MonsterSprite","PlayerSprite","monster1","monster2","monster3","monster4","withRouter","resume","pause","restart","leaderboard","playSwoosh","playHit","playWing","playHitDie","getRandom","setStorage","getStorage","jsxDEV","_jsxDEV","Game","constructor","props","updateLocalStorage","localStorageData","sort","_ref","_ref2","score","a","b","handleLocalStorage","userFound","find","user","name","toLowerCase","userName","push","handleFrame","currentFrameTime","deltaTimeFrames","prevFrameTime","gameOverIntervall","console","log","pauseFrameIntervall","requestFrameId","requestAnimationFrame","isGameRunning","state","Math","ceil","Date","now","startTime","pauseTimeIntervall","offset","borderCollisionDetected","applyGravity","monstersArr","monstersCollisionDetected","moveMonsters","gravity","startGravity","window","cancelAnimationFrame","gameOverStart","setState","player","monsters","movePlayer","e","target","classList","contains","isPaused","currentY","playerRef","current","getBoundingClientRect","y","scale","deltaTime","checkBorderCollision","playerY","startGame","collisionDetected","i","length","checkMonstersCollision","map","monster","index","x","innerWidth","innerHeight","monstersSpeeds","rangeSpeed","initMonstersPosition","monstersPosition","setPause","pausedTimeStart","pauseFrameStart","resumeGame","pausedTime","pausedTimeEnd","pauseTimeEnd","restartGame","gameOverEnd","goToLeaderboard","router","navigate","createRef","monster1Ref","monster2Ref","monster3Ref","monster4Ref","location","undefined","componentDidMount","document","addEventListener","componentDidUpdate","prevProps","prevState","monsterCoords","playerCoords","height","width","componentWillUnmount","removeEventListener","render","className","children","fileName","_jsxFileName","lineNumber","columnNumber","src","onClick","coords","animate","monsterRef","monsterName","spriteSheet","path","_c","$RefreshReg$"],"sources":["/Users/paolo/repos/beije_academy/web/react/flutter-forest-game/src/screens/Game.js"],"sourcesContent":["import React, { Component } from \"react\";\nimport MonsterSprite from \"../components/classComponents/monsterSprite/MonsterSprite\";\nimport PlayerSprite from \"../components/classComponents/playerSprite/PlayerSprite\";\nimport monster1 from \"../assets/images/game/sprites/monsters/enemy1-spritesheet.png\";\nimport monster2 from \"../assets/images/game/sprites/monsters/enemy2-spritesheet.png\";\nimport monster3 from \"../assets/images/game/sprites/monsters/enemy3-spritesheet.png\";\nimport monster4 from \"../assets/images/game/sprites/monsters/enemy4-spritesheet.png\";\n\nimport withRouter from \"../routing/wrapRoutingClass/withNavigation\";\n\nimport resume from \"../assets/images/icons/play.svg\";\nimport pause from \"../assets/images/icons/pause.svg\";\nimport restart from \"../assets/images/icons/return.svg\";\nimport leaderboard from \"../assets/images/icons/leaderboard.svg\";\n\nimport { playSwoosh, playHit, playWing, playHitDie } from \"../utils/playSounds\";\nimport { getRandom } from \"../utils/random\";\n\nimport { setStorage, getStorage } from \"../utils/localStorageUtls\";\n\nimport \"../styles/game/game.css\";\n\nclass Game extends Component {\n  constructor(props) {\n    super(props);\n\n    this.startTime = null;\n    this.pausedTimeStart = 0;\n    this.pausedTimeEnd = 0;\n    this.pauseTimeIntervall = 0;\n\n    this.pauseFrameStart = 0;\n    this.pauseTimeEnd = 0;\n    this.pauseFrameIntervall = 0;\n\n    this.gameOverStart = 0;\n    this.gameOverEnd = 0;\n    this.gameOverIntervall = 0;\n\n    this.startGravity = 1;\n    this.gravity = 1;\n    this.rangeSpeed = window.innerWidth < 480 ? [2, 5] : [6, 10];\n    this.monstersSpeeds = [\n      getRandom(...this.rangeSpeed),\n      getRandom(...this.rangeSpeed),\n      getRandom(...this.rangeSpeed),\n      getRandom(...this.rangeSpeed),\n    ];\n\n    this.requestFrameId = null;\n    this.prevFrameTime = 0;\n\n    this.playerRef = React.createRef();\n    this.monster1Ref = React.createRef();\n    this.monster2Ref = React.createRef();\n    this.monster3Ref = React.createRef();\n    this.monster4Ref = React.createRef();\n\n    this.userName = props.router.location.state.name;\n    this.localStorageData =\n      getStorage(\"users\") === null || getStorage(\"users\" === undefined)\n        ? []\n        : getStorage(\"users\");\n\n    this.state = {\n      player: {\n        y: 346,\n        scale: window.innerWidth < 480 ? 11.76 : 7,\n      },\n      monsters: [\n        {\n          x: getRandom(-60, -window.innerWidth),\n          y: getRandom(110, window.innerHeight - 110),\n          scale: window.innerWidth < 480 ? 17.5 : 10.5,\n        },\n        {\n          x: getRandom(-60, -window.innerWidth),\n          y: getRandom(110, window.innerHeight - 110),\n          scale: window.innerWidth < 480 ? 4.43 : 2.66,\n        },\n        {\n          x: getRandom(-60, -window.innerWidth),\n          y: getRandom(110, window.innerHeight - 110),\n          scale: window.innerWidth < 480 ? 13.33 : 8,\n        },\n        {\n          x: getRandom(-60, -window.innerWidth),\n          y: getRandom(110, window.innerHeight - 110),\n          scale: window.innerWidth < 480 ? 4.21 : 2.53,\n        },\n      ],\n\n      score: 0,\n      isPaused: false,\n      isGameRunning: false,\n    };\n\n    console.log(this.requestFrameId);\n  }\n\n  updateLocalStorage = () => {\n    this.localStorageData.sort(({ score: a }, { score: b }) => b - a);\n    setStorage(\"users\", this.localStorageData);\n    // localStorage.setItem(key, JSON.stringify(value));\n    // localStorage.setItem(\"users\", JSON.stringify(this.localStorageData));\n  };\n\n  handleLocalStorage = (score) => {\n    let userFound = this.localStorageData.find((user) => {\n      return user.name.toLowerCase() === this.userName.toLowerCase();\n    });\n\n    if (!userFound) {\n      this.localStorageData.push({\n        name: this.userName,\n        score: score,\n      });\n      this.updateLocalStorage();\n    }\n\n    if (userFound && userFound.score < score) {\n      userFound.score = score;\n      this.updateLocalStorage();\n    }\n  };\n\n  handleFrame = (currentFrameTime) => {\n    let deltaTimeFrames =\n      currentFrameTime - this.prevFrameTime - this.gameOverIntervall;\n\n    console.log(currentFrameTime);\n\n    this.pauseFrameIntervall = 0;\n    this.gameOverIntervall = 0;\n\n    console.log(\"deltaTimeFrames: \" + deltaTimeFrames);\n\n    this.prevFrameTime = currentFrameTime;\n\n    if (deltaTimeFrames > 200) {\n      return (this.requestFrameId = requestAnimationFrame(this.handleFrame));\n    }\n\n    let isGameRunning = this.state.isGameRunning;\n    let score = Math.ceil(\n      (Date.now() - this.startTime - this.pauseTimeIntervall) / 500\n    );\n    let [offset, borderCollisionDetected] = this.applyGravity(deltaTimeFrames);\n    let [monstersArr, monstersCollisionDetected] =\n      this.moveMonsters(deltaTimeFrames);\n\n    if (monstersCollisionDetected || borderCollisionDetected) {\n      isGameRunning = false;\n      this.gravity = this.startGravity;\n      window.cancelAnimationFrame(this.requestFrameId);\n      this.handleLocalStorage(score);\n\n      this.gameOverStart = Date.now();\n    }\n\n    this.setState({\n      player: offset,\n      monsters: monstersArr,\n      score: score,\n      isGameRunning: isGameRunning,\n    });\n\n    if (!monstersCollisionDetected && !borderCollisionDetected) {\n      this.requestFrameId = window.requestAnimationFrame(this.handleFrame);\n    }\n  };\n\n  movePlayer = (e) => {\n    if (e.target.classList.contains(\"pause-popup\")) return;\n    if (e.target.classList.contains(\"pause-popup_svg\")) return;\n    if (e.target.classList.contains(\"pause\")) return;\n    if (e.target.classList.contains(\"pause_svg\")) return;\n    if (!this.state.isGameRunning) return;\n    if (this.state.isPaused) return;\n\n    playWing();\n\n    this.gravity = this.startGravity;\n\n    const currentY = this.playerRef.current.getBoundingClientRect().y;\n    this.setState({\n      player: {\n        y: currentY - 80,\n        scale: this.state.player.scale,\n      },\n    });\n  };\n\n  applyGravity = (deltaTime) => {\n    let borderCollisionDetected = this.checkBorderCollision();\n    const playerY = this.playerRef.current.getBoundingClientRect().y;\n\n    this.gravity = this.gravity + 0.2;\n\n    return [\n      {\n        y: playerY + this.gravity * (deltaTime / 20),\n        scale: this.state.player.scale,\n      },\n      borderCollisionDetected,\n    ];\n  };\n\n  startGame = () => {\n    this.setState({\n      isGameRunning: true,\n    });\n\n    this.requestFrameId = window.requestAnimationFrame(this.handleFrame);\n    this.startTime = Date.now();\n  };\n\n  componentDidMount() {\n    document.addEventListener(\"click\", this.movePlayer);\n    this.startGame();\n  }\n\n  componentDidUpdate(prevProps, prevState) {}\n\n  moveMonsters = (deltaTime) => {\n    let collisionDetected = false;\n\n    for (let i = 0; i < this.state.monsters.length; i++) {\n      if (\n        this.checkMonstersCollision(\n          this[`monster${i + 1}Ref`].current.getBoundingClientRect()\n        )\n      ) {\n        collisionDetected = true;\n        break;\n      }\n    }\n\n    const monstersArr = this.state.monsters.map((monster, index) => {\n      if (monster.x > window.innerWidth) {\n        monster.x = getRandom(-60, -window.innerWidth);\n        monster.y = getRandom(110, window.innerHeight - 110);\n        this.monstersSpeeds[index] = getRandom(...this.rangeSpeed);\n      }\n\n      monster.x += this.monstersSpeeds[index] * (deltaTime / 20);\n      console.log(monster);\n      return monster;\n    });\n\n    return [monstersArr, collisionDetected];\n\n    ////////////////\n  };\n\n  checkMonstersCollision(monsterCoords) {\n    let monstersCollisionDetected = false;\n    let playerCoords = this.playerRef.current.getBoundingClientRect();\n\n    if (\n      playerCoords.y < monsterCoords.y + monsterCoords.height &&\n      playerCoords.y + playerCoords.height > monsterCoords.y &&\n      playerCoords.x < monsterCoords.x + monsterCoords.width &&\n      playerCoords.x + playerCoords.width > monsterCoords.x\n    ) {\n      playHitDie();\n      monstersCollisionDetected = true;\n    }\n\n    return monstersCollisionDetected;\n  }\n\n  checkBorderCollision() {\n    let playerCoords = this.playerRef.current.getBoundingClientRect();\n    if (\n      playerCoords.y < 0 ||\n      playerCoords.y + playerCoords.height > window.innerHeight\n    ) {\n      playHit();\n      return true;\n    }\n\n    return false;\n  }\n\n  initMonstersPosition = () => {\n    let monstersPosition = this.state.monsters.map((monster) => {\n      return {\n        x: getRandom(-60, -window.innerWidth),\n        y: getRandom(110, window.innerHeight - 110),\n        scale: monster.scale,\n      };\n    });\n\n    return monstersPosition;\n  };\n\n  setPause = () => {\n    cancelAnimationFrame(this.requestFrameId);\n\n    this.pausedTimeStart = Date.now();\n    this.pauseFrameStart = Date.now();\n\n    this.setState({\n      isPaused: true,\n    });\n  };\n\n  resumeGame = () => {\n    this.pausedTime = this.pausedTime + Date.now();\n    this.pausedTimeEnd = Date.now();\n    this.pauseTimeIntervall =\n      this.pauseTimeIntervall + (this.pausedTimeEnd - this.pausedTimeStart);\n\n    this.pauseTimeEnd = Date.now();\n    this.pauseFrameIntervall = this.pauseTimeEnd - this.pauseFrameStart;\n\n    this.setState({\n      isPaused: false,\n    });\n\n    this.requestFrameId = window.requestAnimationFrame(this.handleFrame);\n  };\n\n  restartGame = () => {\n    let monstersPosition = this.initMonstersPosition();\n\n    this.setState({\n      player: {\n        y: 346,\n        scale: this.state.player.scale,\n      },\n      monsters: monstersPosition,\n      score: 0,\n      isPaused: false,\n      isGameRunning: true,\n    });\n\n    playSwoosh();\n    this.startTime = Date.now();\n    this.gameOverEnd = Date.now();\n    this.gameOverIntervall = this.gameOverEnd - this.gameOverStart;\n    this.pauseTimeIntervall = 0;\n    this.requestFrameId = window.requestAnimationFrame(this.handleFrame);\n  };\n\n  goToLeaderboard = () => {\n    this.props.router.navigate(\"/leaderboard\");\n  };\n\n  componentWillUnmount() {\n    window.cancelAnimationFrame(this.requestFrameId);\n    document.removeEventListener(\"click\", this.movePlayer);\n  }\n\n  render() {\n    return (\n      <div className=\"game-container\">\n        {!this.state.isGameRunning && (\n          <div className=\"game-over-wrapper\">\n            <div className=\"game-over\">GAME OVER</div>\n            <div className=\"game-over-choices\">\n              <img\n                className=\"restart\"\n                src={restart}\n                onClick={this.restartGame}\n              />\n              <img\n                className=\"leaderboard\"\n                src={leaderboard}\n                onClick={this.goToLeaderboard}\n              />\n            </div>\n          </div>\n        )}\n        {this.state.isGameRunning && !this.state.isPaused && (\n          <div className=\"pause\" onClick={this.setPause}>\n            <img className=\"pause_svg\" src={pause} />\n          </div>\n        )}\n        {this.state.isPaused && (\n          <div onClick={this.resumeGame} className=\"pause-popup\">\n            <img className=\"pause-popup_svg\" src={resume} />\n          </div>\n        )}\n        <div className=\"score\">{this.state.score}</div>\n        <div\n          className={`layer sky sky_animation ${\n            (!this.state.isGameRunning || this.state.isPaused) && \"paused\"\n          }`}\n        ></div>\n        <div\n          className={`layer clouds-1 clouds-1_animation ${\n            (!this.state.isGameRunning || this.state.isPaused) && \"paused\"\n          }`}\n        ></div>\n        <div\n          className={`layer rocks rocks_animation ${\n            (!this.state.isGameRunning || this.state.isPaused) && \"paused\"\n          }`}\n        ></div>\n        <div\n          className={`layer clouds-2 clouds-2_animation ${\n            (!this.state.isGameRunning || this.state.isPaused) && \"paused\"\n          }`}\n        ></div>\n        <div\n          className={`layer ground-1 ground-1_animation ${\n            (!this.state.isGameRunning || this.state.isPaused) && \"paused\"\n          }`}\n        ></div>\n        <div\n          className={`layer ground-2 ground-2_animation ${\n            (!this.state.isGameRunning || this.state.isPaused) && \"paused\"\n          }`}\n        ></div>\n        <div\n          className={`layer ground-3 ground-3_animation ${\n            (!this.state.isGameRunning || this.state.isPaused) && \"paused\"\n          }`}\n        ></div>\n        <div\n          className={`layer plant plant_animation ${\n            (!this.state.isGameRunning || this.state.isPaused) && \"paused\"\n          }`}\n        ></div>\n        <PlayerSprite\n          playerRef={this.playerRef}\n          coords={{\n            x: 50,\n            y: this.state.player.y,\n            scale: this.state.player.scale,\n          }}\n          animate={this.state.isGameRunning && !this.state.isPaused}\n        />\n        <MonsterSprite\n          monsterRef={this.monster1Ref}\n          monsterName={\"monster-yellow\"}\n          coords={{\n            x: this.state.monsters[0].x,\n            y: this.state.monsters[0].y,\n            width: 0,\n            height: 0,\n          }}\n          spriteSheet={{\n            path: monster1,\n            width: 1050,\n            height: 852,\n            scale: this.state.monsters[0].scale,\n          }}\n          animate={this.state.isGameRunning && !this.state.isPaused}\n        />\n        <MonsterSprite\n          monsterRef={this.monster2Ref}\n          monsterName={\"monster-purple\"}\n          coords={{\n            x: this.state.monsters[1].x,\n            y: this.state.monsters[1].y,\n            width: 0,\n            height: 0,\n          }}\n          spriteSheet={{\n            path: monster2,\n            width: 266,\n            height: 207,\n            scale: this.state.monsters[1].scale,\n          }}\n          animate={this.state.isGameRunning && !this.state.isPaused}\n        />\n        <MonsterSprite\n          monsterRef={this.monster3Ref}\n          monsterName={\"monster-bat\"}\n          coords={{\n            x: this.state.monsters[2].x,\n            y: this.state.monsters[2].y,\n            width: 0,\n            height: 0,\n          }}\n          spriteSheet={{\n            path: monster3,\n            width: 800,\n            height: 812,\n            scale: this.state.monsters[2].scale,\n          }}\n          animate={this.state.isGameRunning && !this.state.isPaused}\n        />\n        <MonsterSprite\n          monsterRef={this.monster4Ref}\n          monsterName={\"monster-red\"}\n          coords={{\n            x: this.state.monsters[3].x,\n            y: this.state.monsters[3].y,\n            width: 0,\n            height: 0,\n          }}\n          spriteSheet={{\n            path: monster4,\n            width: 253,\n            height: 207,\n            scale: this.state.monsters[3].scale,\n          }}\n          animate={this.state.isGameRunning && !this.state.isPaused}\n        />\n\n        {/* <div\n          className=\"player\"\n          ref={this.playerRef}\n          style={{ top: `${this.state.player.y}px`, color: \"white\" }}\n          onClick={this.moveBird}\n          //   style={{ top: `${this.state.player.y}px` }}\n          //   style={{\n          //     transform: `translate(${this.state.player.x}px, ${this.state.player.y}px)`,\n          //   }}\n        >\n          {this.state.player.y}px\n        </div> */}\n      </div>\n    );\n  }\n}\n\nexport default withRouter(Game);\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}